REM  *****  BASIC  *****

dim DOCUMENT as object
dim SHEET as object
dim MAX_SEARCH_INDEX as integer
dim SHEET_PASSWORD as string
dim PRICE_COL_INDEX as integer
dim DATE_COL_INDEX as integer
dim TOTAL_COL_INDEX as integer
dim SAVED_COLOR as long
dim LAST_FILLED_ROW_INDEX as integer
dim FIRST_INPUT_ROW_INDEX as integer
dim TOTAL_FORMULA as string
dim DEFAULT_CUSTOMER_NAME as string
dim CUSTOMER_SAVE_PATH as string

Sub Main

	DOCUMENT              = ThisComponent
	SHEET                 = DOCUMENT.Sheets.getByIndex(0)
	MAX_SEARCH_INDEX      = 500
	SHEET_PASSWORD        = "193782"
	PRICE_COL_INDEX       = 1
	DATE_COL_INDEX        = 0
	TOTAL_COL_INDEX       = 3
	SAVED_COLOR           = RGB(30, 255, 86)
	FIRST_INPUT_ROW_INDEX = 2
	TOTAL_FORMULA         = "=SUM(B2:B9999)"
	DEFAULT_CUSTOMER_NAME = "MUSTERI ADI"
	CUSTOMER_SAVE_PATH    = "/home/akin/Masaüstü/"

	SHEET.unprotect(SHEET_PASSWORD)
	
	'saveCustomer()

	getLastFilledRowIndex()
	removeEmptyRows()
	addDates()
	setupTotalCell()
	
	SHEET.protect(SHEET_PASSWORD)

End Sub

function getDateCell(rowIndex as integer) 
	getDateCell = SHEET.getCellByPosition(DATE_COL_INDEX, rowIndex)
end function

function setDateCell(rowIndex as integer, value as date)
	getDateCell(rowIndex).setValue(value)
end function

function getPriceCell(rowIndex as integer)
	getPriceCell = SHEET.getCellByPosition(PRICE_COL_INDEX, rowIndex)
end function

function setPriceCell(rowIndex as integer, value as integer)
	getPriceCell(rowIndex).setValue(value)
end function

function getTotalCell() 
	getTotalCell = SHEET.getCellByPosition(TOTAL_COL_INDEX, FIRST_INPUT_ROW_INDEX)
end function


function getLastFilledRowIndex()
	LAST_FILLED_ROW_INDEX = MAX_SEARCH_INDEX
	while Len(getDateCell(LAST_FILLED_ROW_INDEX).getString()) = 0 and Len(getPriceCell(LAST_FILLED_ROW_INDEX).getString()) = 0
		LAST_FILLED_ROW_INDEX = LAST_FILLED_ROW_INDEX - 1
	wend
	getLastFilledRowIndex = LAST_FILLED_ROW_INDEX
end function

function removeRow(rowIndex as integer)
	SHEET.rows.removeByIndex(rowIndex, 1)
end function

function removeEmptyRows() 
	for i = FIRST_INPUT_ROW_INDEX to LAST_FILLED_ROW_INDEX
		if Len(getPriceCell(i).getString()) = 0 then
			removeRow(i)
			i = i - 1
			LAST_FILLED_ROW_INDEX = LAST_FILLED_ROW_INDEX - 1
		end if
	next i
end function

function addDates()
	for i = FIRST_INPUT_ROW_INDEX to LAST_FILLED_ROW_INDEX
		if Len(getPriceCell(i).getString()) > 0 and Len(getDateCell(i).getString()) = 0 then
			setDateCell(i, Now())
			getPriceCell(i).cellBackColor = SAVED_COLOR
		end if
	next i
end function

function setupTotalCell()
	getTotalCell().setFormula(TOTAL_FORMULA)
end function

function getCustomerName() 
	getCustomerName = SHEET.getCellByPosition(0, 0).getString()
end function

function setCustomerName(customerName as string)
	customerNameCell = SHEET.getCellByPosition(0, 0)
	customerName = UCase(customerName)
	customerNameCell.setString(customerName)
end function

function saveCustomerToFile(customerName as string)
	dim fileProperty as new com.sun.star.beans.PropertyValue
	fileProperty.name  = "FilterName"
	fileProperty.value = "Calc8"
	customerFileURL = ConvertToURL(CUSTOMER_SAVE_PATH & customerName)
	DOCUMENT.storeToUrl(customerFileURL, Array(fileProperty))
end function

function saveCustomer()
	if getCustomerName() = DEFAULT_CUSTOMER_NAME then
		customerName = InputBox("Müşteri adını giriniz:")
		setCustomerName(customerName)
		saveCustomerToFile(customerName, )
	end if
end function
